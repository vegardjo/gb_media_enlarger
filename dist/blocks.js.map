{"version":3,"file":"blocks.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA8C;AACc;AACK;AACnB;;AAE9C;AACA;AACA;AACA;AACA;AACA,MAAMK,eAAe,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;EAE1C,IAAIA,IAAI,KAAK,iCAAiC,EAAE;IAC9C,OAAOD,QAAQ;EACjB;;EAEA;EACAA,QAAQ,CAACE,UAAU,GAAG;IACpB,GAAGF,QAAQ,CAACE,UAAU;IACtBC,YAAY,EAAE;MACZC,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE,KAAK,CAAG;IACnB;EACF,CAAC;EAED,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzB,MAAM;MAAEL,UAAU;MAAEM;IAAc,CAAC,GAAGD,KAAK;;IAE3C;IACA,MAAM,CAACJ,YAAY,EAAEM,eAAe,CAAC,GAAGX,4DAAQ,CAACI,UAAU,CAACC,YAAY,IAAI,KAAK,CAAC;IAElF,MAAMO,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,QAAQ,GAAG,CAACR,YAAY;MAC9BM,eAAe,CAACE,QAAQ,CAAC;MACzBH,aAAa,CAAC;QAAEL,YAAY,EAAEQ;MAAS,CAAC,CAAC;MACzCH,aAAa,CAAC;QAACI,YAAY,EAAE;MAAI,CAAC,CAAC;IACrC,CAAC;IAEDC,OAAO,CAACC,GAAG,CAACZ,UAAU,EAAE,QAAQ,CAAC;IAEjC,OACEa,oDAAA,CAACrB,wDAAQ,QAaPqB,oDAAA,CAACpB,sEAAiB,QAChBoB,oDAAA,CAACnB,4DAAS;MAACoB,KAAK,EAAC;IAAgB,GAC/BD,oDAAA,CAAClB,gEAAa;MACZoB,KAAK,EAAC,kBAAkB;MACxBC,IAAI,EAAC,qDAAqD;MAC1DC,OAAO,EAAEhB,YAAa;MACtBiB,QAAQ,EAAEV;IAAa,CACxB,CACQ,CACM,CAAC,EAGnBV,QAAQ,CAACqB,IAAI,CAACd,KAAK,CACZ,CAAC;EAEf,CAAC;EAED,OAAO;IACL,GAAGP,QAAQ;IACXqB,IAAI,EAAEf;EACR,CAAC;AACH,CAAC;AAED,iEAAeP,eAAe;;;;;;;;;;AC7E9B;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA,MAAM;EAAEuB;AAAU,CAAC,GAAGC,EAAE,CAACC,KAAK;AAEiB;AAE/CF,SAAS,CAAC,0BAA0B,EAAE,qBAAqB,EAAEvB,uDAAe,CAAC,C","sources":["webpack://example_blocks/./blocks/media_enlarger/index.js","webpack://example_blocks/external window \"React\"","webpack://example_blocks/external window [\"wp\",\"blockEditor\"]","webpack://example_blocks/external window [\"wp\",\"components\"]","webpack://example_blocks/external window [\"wp\",\"element\"]","webpack://example_blocks/webpack/bootstrap","webpack://example_blocks/webpack/runtime/compat get default export","webpack://example_blocks/webpack/runtime/define property getters","webpack://example_blocks/webpack/runtime/hasOwnProperty shorthand","webpack://example_blocks/webpack/runtime/make namespace object","webpack://example_blocks/./blocks/index.js"],"sourcesContent":["import { Fragment } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\n/**\n * When this function gets run by the addfilter\n * hook below, the filter passes it the block settings\n * or config file.\n */\nconst alterMediaBlock = (settings, name) => {\n\n  if (name !== 'drupalmedia/drupal-media-entity') {\n    return settings;\n  }\n\n  // Extend block attributes.\n  settings.attributes = {\n    ...settings.attributes,\n    isExpandable: {\n      type: 'boolean',\n      default: false,  // Set the default value\n    },\n  };\n\n  const newEdit = (props) => {\n    const { attributes, setAttributes } = props;\n\n    // Local state to manage the toggle button\n    const [isExpandable, setIsExpandable] = useState(attributes.isExpandable || false);\n\n    const toggleButton = () => {\n      const newValue = !isExpandable;\n      setIsExpandable(newValue);\n      setAttributes({ isExpandable: newValue });\n      setAttributes({lockViewMode: true});\n    };\n\n    console.log(attributes, 'atr js');\n\n    return (\n      <Fragment>\n        {/* Adding a button to the BlockControls toolbar */}\n        {/*<BlockControls>*/}\n        {/*  <ToolbarButton*/}\n        {/*    icon={isExpandable ? 'visibility' : 'hidden'}*/}\n        {/*    label=\"Media is expandable\"*/}\n        {/*    help=\"Halp me\"*/}\n        {/*    onClick={toggleButton}*/}\n        {/*    isPressed={isExpandable}*/}\n        {/*  />*/}\n        {/*</BlockControls>*/}\n\n        {/* Adding the toggle control to the InspectorControls sidebar */}\n        <InspectorControls>\n          <PanelBody title=\"Media Settings\">\n            <ToggleControl\n              label=\"Expandable image\"\n              help=\"Tick to show a larger version of the image on click\"\n              checked={isExpandable}\n              onChange={toggleButton}\n            />\n          </PanelBody>\n        </InspectorControls>\n\n        {/* Render the original edit component */}\n        {settings.edit(props)}\n      </Fragment>\n    );\n  };\n\n  return {\n    ...settings,\n    edit: newEdit,\n  };\n};\n\nexport default alterMediaBlock;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { addFilter } = wp.hooks;\n\nimport alterMediaBlock from './media_enlarger';\n\naddFilter('blocks.registerBlockType', 'utils/mediaEnlarger', alterMediaBlock)\n"],"names":["Fragment","InspectorControls","PanelBody","ToggleControl","useState","alterMediaBlock","settings","name","attributes","isExpandable","type","default","newEdit","props","setAttributes","setIsExpandable","toggleButton","newValue","lockViewMode","console","log","createElement","title","label","help","checked","onChange","edit","addFilter","wp","hooks"],"sourceRoot":""}